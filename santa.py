import telebot
from telebot import types
from peewee import Model, SqliteDatabase, CharField, BooleanField, IntegrityError
import random

TOKEN = ""
bot = telebot.TeleBot(TOKEN)

admin_user_id = "1702825309"  # –ó–∞–º–µ–Ω–∏—Ç–µ —ç—Ç–æ—Ç ID –Ω–∞ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–π ID –≤–∞—à–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö SQLite
db = SqliteDatabase('applications.db')

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
class User(Model):
    user_id = CharField(unique=True)
    has_application = BooleanField(default=False)
    application_sent = BooleanField(default=False)

    class Meta:
        database = db

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ –¥–ª—è –∑–∞—è–≤–ª–µ–Ω–∏–π
class Application(Model):
    user = CharField()
    name = CharField()
    message = CharField()

    class Meta:
        database = db

# –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
db.connect()
db.create_tables([User, Application])

# –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏
broadcast_user_id = None

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def handle_start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_hello = types.KeyboardButton(text="–ï—Ä–µ–∂–µ")
    button_list = types.KeyboardButton(text="“ö–∞—Ç—ã—Å—É—à—ã–ª–∞—Ä –¢—ñ–∑—ñ–º—ñ")
    button_application = types.KeyboardButton(text="–¢—ñ—Ä–∫–µ–ª—É")
    button_admin = types.KeyboardButton(text="")
    markup.row(button_hello, button_list, button_application)
    markup.row(button_admin)

    bot.send_message(message.chat.id, "üí¨ ”ò—Ä–∏–Ω–µ –æ–π–Ω–∞“ì—ã—Å—ã  –¢—ñ—Ä–∫–µ–ª—É    –∞–ª “õ–∞—Ç—ã—Å–ø–∞–π—Ç—ã–Ω –∞–¥–∞–º–¥–∞—Ä–¥—ã –º”ô–∂–±“Ø—Ä–ª–µ–º–µ–π–º—ñ–∑!\n---------------------------------------------------------------------------------\n‚ùó–®–ê–†–¢!\n–®–ê–¢–ê–°–ü–ê–£ “Æ–®–Ü–ù –ï–°–Ü–ú–Ü“¢–Ü–ó–î–Ü –ñ”ò–ù–ï –°–´–ù–´–ë–´“¢–´–ó–î–´ –ñ–ê–ó–´–ü –ö–ï–¢–Ü“¢–Ü–ó –ï–ì–ï–† –û–õ–ê–ô –ñ–ê–°–ê–ú–ê–°–ê–ù–´–ó –¢–Ü–ó–Ü–ú–ù–ï–ù –ñ–û–ô–´–õ–ê–°–´–ó\n---------------------------------------------------------------------------------\nüîÅ“ö–ê–¢–´–°“ö–ê–ù –ê–î–ê–ú –®–´“í–ê –ê–õ–ú–ê–ô–î–´ –®–´“ö“ö–´–°–´ –ö–ï–õ–ï–¢–Ü–ù–î–ï–† @connect102 –ñ–ê–ó–ê–ú–´–ó\n---------------------------------------------------------------------------------\n‚úÖ–ë“±–ª –±–æ—Ç –∂”ô–π –∫”©–Ω—ñ–ª –∫”©—Ç–µ—Ä—ñ–ø –æ“õ—É—à—ã–ª–∞—Ä –∞—Ä–∞—Å—ã–Ω–¥–∞“ì—ã “õ–∞—Ä—ã–º “õ–∞—Ç—ã–Ω–∞—Å—Ç—ã –¥–∞–º—ã—Ç–∞–¥—ã –ö–µ–∑ –∫–µ–ª–≥–µ–Ω –æ“õ—É—à—ã –∫–µ–∑ –∫–µ–ª–≥–µ–Ω –æ“õ—É—à—ã–º–µ–Ω —Ç“Ø—Å–µ–¥—ñ.–û–π—ã–Ω –±–∞—Å—Ç–∞–ª–∞—Ç—ã–Ω —É–∞“õ—ã—Ç—Ç–∞ ADMIN —Ö–∞–±–∞—Ä–ª–∞–π–¥—ã ”ô–∑—ñ—Ä—à–µ —Ç—ñ—Ä–∫–µ–ª—É –±–æ–ª—ã–ø –∂–∞—Ç—ã—Ä \n---------------------------------------------------------------------------------\n‚ù§Ô∏è”®—Ç—ñ–Ω–µ–º—ñ–Ω –µ—à–∫—ñ–º–¥—ñ –∞–ª–¥–∞—É–¥—ã –æ–π–ª–∞–º–∞–π–∞“õ  —Ç–µ–∫ ”©–∑—ñ–º—ñ–∑ “Ø—à—ñ–Ω “õ–∞—Ç—ã—Å—É–ª–∞—Ä—ã“£—ã–∑–¥—ã ”©—Ç—ñ–Ω–µ–º—ñ–Ω!\n–¢“Ø—Å—ñ–Ω–±–µ–π –∂–∞—Ç—Å–∞–Ω—ã–∑ üë®‚Äçüíª @connect102", reply_markup=markup)

# –ö–æ–º–∞–Ω–¥–∞ /hello
@bot.message_handler(func=lambda message: message.text == '–ï—Ä–µ–∂–µ')
def handle_hello(message):
    bot.send_message(message.chat.id, "–ï–†–ï–ñ–ï!\nüéâ–û–π—ã–Ω –±–∞—Ä—ã—Å—ã–Ω–¥–∞ “õ–∞—Ç—ã—Å—É—à—ã–ª–∞—Ä —Ç—ñ—Ä–∫–µ–ª–µ–¥—ñ. –¢—ñ—Ä–∫–µ–ª–≥–µ–Ω “õ–∞—Ç—ã—Å—É—à—ã–ª–∞—Ä –∂–∏–Ω–∞“õ—Ç–∞–ª“ì–∞–Ω–¥–∞ –±–æ—Ç –æ–π—ã–Ω–¥—ã –±–∞—Å—Ç–∞–π–¥—ã. –ë–æ—Ç —Å—ñ–∑–≥–µ 1 –∞–¥–∞–º–Ω—ã“£ –µ—Å—ñ–º—ñ–Ω –±–µ—Ä–µ–¥—ñ. –û–ª “õ—ã–∑ –±–æ–ª—É—ã –º“Ø–º–∫—ñ–Ω –Ω–µ–º–µ—Å–µ “±–ª–¥–∞ –±–æ–ª—É—ã –º“Ø–º–∫—ñ–Ω, –æ—Å—ã–ª–∞–π –±–∞—Ä–ª—ã“õ –∞–¥–∞–º“ì–∞ —Ç—ñ–∑—ñ–º —ñ—à—ñ–Ω–µ–Ω –∞–¥–∞–º —Ç–∞—É—ã–ø –±–µ—Ä–µ–¥—ñ. –ï—à –±—ñ—Ä –∞–¥–∞–º —Å—ã–π–ª—ã“õ—Å—ã–∑ “õ–∞–ª–º–∞–π–¥—ã –¥–µ–≥–µ–Ω “Ø–º—ñ—Ç—Ç–µ–º—ñ–Ω. –ë“±–Ω—ã“£ –±”ô—Ä—ñ —Å—ñ–∑ –∫—ñ–º–≥–µ —Ç“Ø—Å—Ç—ñ–Ω—ñ–∑ —Å–æ“ì–∞–Ω –±–∞–π–ª–∞–Ω—ã—Å—Ç—ã –∂”ô–Ω–µ —Å—ñ–∑–≥–µ –±–∞–π–ª–∞–Ω—ã—Å—Ç—ã. –°—ñ–∑–≥–µ –±–æ—Ç —Å–∏–ª—ã“õ –±–µ—Ä–µ—Ç—ñ–Ω –∞–¥–∞–º–¥—ã —à—ã“ì–∞—Ä—ã–ø –±–µ—Ä–µ–¥—ñ –∂”ô–Ω–µ —Å—ñ–∑ —Å–æ–ª –∞–¥–∞–º“ì–∞ –∫–µ–∑ –∫–µ–ª–≥–µ–Ω —Å—ã–π–ª—ã“õ –¥–∞—É—ã–Ω–¥–∞–π—Å—ã–∑. –°–æ–ª–∞–π —Å—ñ–∑–≥–µ–¥–µ 1 –∞–¥–∞–º –¥–∞—É—ã–Ω–¥–∞–π–¥—ã. –ï–Ω–¥–µ—à–µ –°”ò–¢–¢–Ü–õ–Ü–ö!üéÅ ")

@bot.message_handler(func=lambda message: message.text == '“ö–∞—Ç—ã—Å—É—à—ã–ª–∞—Ä –¢—ñ–∑—ñ–º—ñ')
def handle_list(message):
    applications = Application.select()
    if applications:
        response = "“ö–ê–¢–´–°–£–®–´–õ–ê–†:\n"
        for app in applications:
            response += f"{app.message}\n"
    else:
        response = "“ö–∞—Ç—ã—Å—É—à—ã–ª–∞—Ä ”ô–∑—ñ—Ä–≥–µ –∂–æ“õ."

    if response:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ response –Ω–µ –ø—É—Å—Ç–æ–π
        bot.send_message(message.chat.id, response)
    else:
        bot.send_message(message.chat.id, "–ñ–æ“õ –ø–∞–π–¥–∞–ª–∞–Ω—É—à—ã–ª–∞—Ä —Ç–∞–±—ã–ª–º–∞–¥—ã.")

# –ö–æ–º–∞–Ω–¥–∞ /admin
@bot.message_handler(commands=['admin'])
def handle_admin(message):
    if str(message.chat.id) == admin_user_id:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button_random = types.KeyboardButton(text="/random")
        button_broadcast = types.KeyboardButton(text="–†–∞—Å—Å—ã–ª–∫–∞")
        markup.row(button_random)
        markup.row(button_broadcast)

        bot.send_message(message.chat.id, "ADMIN –ø–∞–Ω–µ–ª–≥–µ –∫–æ—à –∫–µ–ª–¥—ñ–Ω.", reply_markup=markup)
    else:
        bot.send_message(message.chat.id, "–°–µ–Ω –∞–¥–º–∏–Ω –µ–º–µ—Å—Å—ñ–Ω –∞–¥–º–∏–Ω —Ç–µ–∫ –ï–ª–¥–æ—Å –†–∞—É—Ñ.")

# –ö–æ–º–∞–Ω–¥–∞ /random
@bot.message_handler(commands=['random'])
def handle_random(message):
    if str(message.chat.id) == admin_user_id:
        users = list(User.select().where(User.application_sent == True))

        if len(users) < 2:
            bot.send_message(message.chat.id, "–µ–Ω –∫–µ–º—ñ 2 –∞–¥–∞–º “õ–∞–∂–µ—Ç.")
            return

        random.shuffle(users)

        for i in range(len(users)):
            user = users[i]
            receiver = users[(i + 1) % len(users)]
            receiver_name = Application.get(Application.user == receiver.user_id).name
            bot.send_message(user.user_id, f"–°—ñ–∑–¥—ñ“£ —Å–∏–ª—ã“õ –±–µ—Ä–µ—Ç—ñ–Ω –∞–¥–∞–º—ã“£—ã–∑: {receiver_name}")

        bot.send_message(message.chat.id, "–ê–ª –µ–Ω–¥—ñ “õ–∞–Ω–¥–∞–π —Å–∏–ª—ã“õ –±–µ—Ä–µ—Ç—ñ–Ω—ñ“£–¥—ñ –∞—Å—ã“ì–∞ –∫“Ø—Ç–µ–º—ñ–∑ .")
    else:
        bot.send_message(message.chat.id, "–°–µ–Ω –ê–¥–º–∏–Ω –µ–º–µ—Å—Å—ñ–Ω –∞–¥–º–∏–Ω –ï–ª–¥–æ—Å –†–∞—É—Ñ")

# –ö–æ–º–∞–Ω–¥–∞ /broadcast
@bot.message_handler(func=lambda message: message.text == '–†–∞—Å—Å—ã–ª–∫–∞')
def handle_broadcast(message):
    global broadcast_user_id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –∫–æ–º–∞–Ω–¥—ã - –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
    if str(message.chat.id) == admin_user_id:
        broadcast_user_id = str(message.chat.id)
        bot.send_message(message.chat.id, "–ñ—ñ–±–µ—Ä—ñ–ª–µ—Ç—ñ–Ω —Å”©–∑ –Ω–µ–º–µ—Å–µ —Ñ–æ—Ç–æ–Ω—ã –∂—ñ–±–µ—Ä—ñ–Ω—ñ–∑:")
        bot.register_next_step_handler(message, process_broadcast_input)
    else:
        bot.send_message(message.chat.id, "–°—ñ–∑ –∞–¥–º–∏–Ω –µ–º–µ—Å—Å—ñ–∑.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞ –¥–ª—è –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏
def process_broadcast_input(message):
    global broadcast_user_id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–∞—Å—Å—ã–ª–∫—É –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
    if str(message.chat.id) == admin_user_id and broadcast_user_id:
        users = list(User.select().where(User.application_sent == True))
        
        if users:
            if message.text:
                text = message.text.strip()  # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –≤ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ —Ç–µ–∫—Å—Ç–∞
                admin_broadcast_message = f"*–ê–î–ú–ò–ù\n* {text}"
                for user in users:
                    bot.send_message(user.user_id, admin_broadcast_message, parse_mode='Markdown')
            elif message.photo:
                # –ï—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
                for user in users:
                    bot.send_photo(user.user_id, message.photo[0].file_id)
            else:
                bot.send_message(admin_user_id, "–¢–µ–∫—Å—Ç –Ω–µ–º–µ—Å–µ –§–æ—Ç–æ –û“õ—ã–ª–º–∞–π –∂–∞—Ç—ã—Ä.")
                return

            bot.send_message(admin_user_id, "–°”ô—Ç—Ç—ñ –∂—ñ–±–µ—Ä—ñ–ª–¥—ñ.")
            broadcast_user_id = None
        else:
            bot.send_message(admin_user_id, "–°–æ–±—â–µ–Ω–∏—è –±–∞—Ä–∞—Ç–Ω –∞–¥–∞–º –∂–æ“õ.")
    else:
        bot.send_message(admin_user_id, "–°—ñ–∑ –∞–¥–º–∏–Ω –µ–º–µ—Å—Å—ñ–∑ –Ω–µ–º–µ—Å–µ –¥“±—Ä—ã—Å –∂–∞–∑–±–∞–¥—ã“£—ã–∑.")



# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ó–∞—è–≤–ª–µ–Ω–∏–µ"
@bot.message_handler(func=lambda message: message.text == '–¢—ñ—Ä–∫–µ–ª—É')
def handle_application_button(message):
    user_id = str(message.chat.id)
    try:
        existing_user = User.create(user_id=user_id)
    except IntegrityError:
        existing_user = User.get(user_id=user_id)

    if existing_user.has_application:
        bot.send_message(message.chat.id, "–°—ñ–∑ —Ç—ñ—Ä–∫–µ–ª—ñ–ø “õ–æ–π–¥—ã–Ω—ã–∑ –±–∞—Å“õ–∞ —Ç—ñ—Ä–∫–µ–ª–µ –∞–ª–º–∞–π—Å—ã–∑")
    elif existing_user.application_sent:
        bot.send_message(message.chat.id, "–°—ñ–∑ —Ç—ñ—Ä–∫–µ–ª—ñ–ø “õ–æ–π–¥—ã–Ω—ã–∑ –±–∞—Å“õ–∞ —Ç—ñ—Ä–∫–µ–ª–µ –∞–ª–º–∞–π—Å—ã–∑ 2–Ω—à—Ä–µ—Ç —Ç—ñ—Ä–∫–µ–ª–µ –∞–ª–º–∞–π—Å—ã–∑.")
    else:
        bot.send_message(message.chat.id, "–ê—Ç—ã –∂”©–Ω—ñ“£—ñ–∑ —Å—ã–Ω—ã–±—ã“£—ã–∑ –ú—ñ–Ω–¥–µ—Ç—Ç—ñ –∞—Ä—ã “õ–∞—Ä–∞–π “õ—ã—Å“õ–∞ —Å”©–∑ –∂–∞–∑—Å–∞–Ω—ã–∑ –±–æ–ª–∞–¥—ã.")
        existing_user.has_application = True
        existing_user.save()

@bot.message_handler(func=lambda message: True, content_types=['text'])
def handle_text_message(message):
    user_id = str(message.chat.id)

    try:
        user = User.get(user_id=user_id)
    except User.DoesNotExist:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–º—É —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –Ω—É–∂–Ω–æ —Å–Ω–∞—á–∞–ª–∞ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–Ω–æ–ø–∫–æ–π "–¢—ñ—Ä–∫–µ–ª—É"
        bot.send_message(message.chat.id, "")
        return

    if user.has_application and not user.application_sent:
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–ª–µ–Ω–∏—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        application = Application.create(user=user_id, name=message.text, message=message.text)
        bot.send_message(message.chat.id, f"{message.text} –¢—ñ–∑—ñ–º–≥–µ “õ–æ—Å—ã–ª–¥—ã.")
        user.application_sent = True  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–ª–µ–Ω–∏—è
        user.save()
    else:
        bot.send_message(message.chat.id, "")


# –û—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –æ—Å—Ç–∞–≤–ª—è–µ–º –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
if __name__ == '__main__':
    bot.polling(none_stop=True)
